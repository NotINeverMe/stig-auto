name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    permissions:
      contents: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        run: |
          docker run --rm -v "$PWD:/mnt" -w /mnt koalaman/shellcheck-alpine:v0.9.0 \
            shellcheck -x $(git ls-files '*.sh')
      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible
      - name: Validate role versions exist
        run: |
          awk '
            /^ *- name:/ { role = $3 }
            /^ *version:/ {
              gsub(/["'"]/, "", ver)
              repo_name_part = toupper(role)
              cmd = sprintf("git ls-remote --exit-code --tags https://github.com/ansible-lockdown/%s.git refs/tags/%s", repo_name_part, ver)
              print "Validating role: " role ", version: " ver " (Repo: https://github.com/ansible-lockdown/" repo_name_part ".git)"
              if (system(cmd) != 0) {
                print "Error: Validation failed for role '\''" role "'\'', version '\''" ver "'\'' using command: " cmd
                exit 1
              }
            }
          ' ansible/requirements.yml
      - name: Install Ansible roles
        run: |
          ansible-galaxy install -r ansible/requirements.yml --roles-path roles/
      - name: Ansible syntax check
        run: ansible-playbook ansible/remediate.yml --syntax-check
      - name: Run bootstrap script in dry-run mode
        run: sudo bash bootstrap.sh --dry-run
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/
